pipeline {
   agent any

   stages {
      stage('pull code') {
         steps {
            checkout([$class: 'GitSCM', branches: [[name: '*/${branch}']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'fdcbfa78-57b8-4896-a76a-331208f7c55e', url: 'http://192.168.124.38/java/mvnwebapp.git']]])
         }
      }
      stage('code checking') {
         steps {

            script {
                 //引入SonarQubeScanner工具
                scannerHome = tool 'sonar-scanner'
            }
            //引入SonarQube的服务器环境
            withSonarQubeEnv('sonarqube') {
                sh "${scannerHome}/bin/sonar-scanner"
            }
         }
      }

      stage('build project') {
          steps {
             //sh label: '', script: '/usr/local/maven3/bin/mvn clean package'
             sh '/usr/local/maven3/bin/mvn clean package'
          }
      }
      stage('publish project') {
          steps {
              deploy adapters: [tomcat8(credentialsId: '4924c84c-3561-4379-9a44-3e025002e0c0', path: '', url: 'http://192.168.124.38:8081/'), tomcat8(credentialsId: '4924c84c-3561-4379-9a44-3e025002e0c0', path: '', url: 'http://192.168.124.39:8081/')], contextPath: null, war: 'target/*.war'
          }
      }
   }
   post {
         always {
            emailext(
               subject: '构建通知：${PROJECT_NAME} - Build # ${BUILD_NUMBER} - ${BUILD_STATUS}!',
               body: '${FILE,path="email.html"}',
               to: '1071102039@qq.com'
            )
         }
   }
}
